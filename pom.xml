<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.techstar</groupId>
  <artifactId>tech07MavenIDEWEB</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>tech07MavenIDEWEB Maven Webapp</name>
  <url>http://maven.apache.org</url>
  
  <!-- SpringMVC3+Spirng3+Hibernate4的web项目 -->
  <properties>
  	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  	<spring.version>3.2.3.RELEASE</spring.version>
  	<hibernate.version>4.2.2.Final</hibernate.version>
  	<slf4j.version>1.7.5</slf4j.version>
  	<jackson.version>2.2.2</jackson.version>
  	<struts.version>XXX</struts.version>
<!--   	<jdk.version>1.6</jdk.version> -->
  	<file.encoding>UTF-8</file.encoding>
  </properties>
  
  
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
    
    <!-- servlet/jsp api -->
  	<dependency>
  		<groupId>javax.servlet</groupId>
  		<artifactId>servlet-api</artifactId>
  		<version>2.5</version>
  		<!-- 属性是容器中已经有了不会进行部署 -->
  		<scope>provided</scope>
  	</dependency>
  	<dependency>
  		<groupId>javax.servlet.jsp</groupId>
  		<artifactId>jsp-api</artifactId>
  		<version>2.1</version>
  		<scope>provided</scope>
  	</dependency>
  	
  	<!-- jstl -->
  	<dependency>
  		<groupId>javax.servlet</groupId>
  		<artifactId>jstl</artifactId>
  		<version>1.2</version>
  	</dependency>
  	
  	<!-- SpringMVC3+Spirng3+Hibernate4的web项目 -->
  	<!-- slf4j -->
  	<dependency>
  		<groupId>org.slf4j</groupId>
  		<artifactId>slf4j-log4j12</artifactId>
  		<version>${slf4j.version}</version>
  	</dependency>
  	<!-- junit -->
  	<dependency>
  		<groupId>junit</groupId>
  		<artifactId>junit</artifactId>
  		<version>4.8.2</version>
  	</dependency>
  	<!-- mysql driver -->
  	<dependency>
  		<groupId>mysql</groupId>
  		<artifactId>mysql-connector-java</artifactId>
  		<version>5.1.22</version>
  	</dependency>
  	<!-- sql server数据库驱动 -->
  	<dependency>
  		<groupId>net.sourceforge.jtds</groupId>
  		<artifactId>jtds</artifactId>
  		<version>1.3.0</version>
  	</dependency>
  	<!-- 
  		oracle maven仓库的ojdbc需官方授权，故下本地之后（ojdbc14.jar）,上传到本地的maven库
  		mnv install:install -file -Dfile=d:/ojdbc14.jar -DgroupId=com.oracle -DartifactId=ojdbc14 -Dversion=10.2.0.1.0 -Dpackageing=jar
  	 -->
<!--   	 <dependency> -->
<!--   	 	<groupId>com.oracle</groupId> -->
<!--   	 	<artifactId>ojdbc14</artifactId> -->
<!--   	 	<version>10.2.0.1.0</version> -->
<!--   	 </dependency> -->
  	 
  	 <!-- fileupload -->
  	 <dependency>
  	 	<groupId>commons-fileupload</groupId>
  	 	<artifactId>commons-fileupload</artifactId>
  	 	<version>1.2.2</version>
  	 </dependency>
  	 
  	 <!-- io -->
  	 <dependency>
  	 	<groupId>commons-io</groupId>
  	 	<artifactId>commons-io</artifactId>
  	 	<version>2.4</version>
  	 </dependency>
  	 <!-- c3p0 -->
  	 <dependency>
  	 	<groupId>c3p0</groupId>
  	 	<artifactId>c3p0</artifactId>
  	 	<version>0.9.1.2</version>
  	 </dependency>
  	 <!-- struts2 -->
<!--   	 <dependency> -->
<!--   	 	<groupId>org.apache.struts</groupId> -->
<!--   	 	<artifactId>struts2-core</artifactId> -->
<!--   	 	<version>${struts.version}</version> -->
<!--   	 	<exclusions>	 -->
<!--   	 		<exclusion> -->
<!-- 	  	 		<groupId>javassist</groupId> -->
<!-- 	  	 		<artifactId>javassist</artifactId> -->
<!--   	 		</exclusion> -->
<!--   	 	</exclusions> -->
<!--   	 </dependency> -->
<!--   	 <dependency> -->
<!--   	 	<groupId>org.apache.struts</groupId> -->
<!--   	 	<artifactId>struts2-spring-plugin</artifactId> -->
<!--   	 	<version>${struts.version}</version> -->
<!-- 		<exclusions> -->
<!-- 			<exclusion> -->
<!-- 				<groupId>org.springframework</groupId> -->
<!-- 				<artifactId>spring-core</artifactId> -->
<!-- 			</exclusion> -->
<!-- 		</exclusions> -->
<!--   	 </dependency> -->
	<!-- sprign3 -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-beans</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-context</artifactId>
		<version>${spring.version}</version>
	</dependency>
	
	<!-- spring 需要的aspectj依赖包 -->
	<dependency>
		<groupId>org.aspectj</groupId>
		<artifactId>aspectjweaver</artifactId>
		<version>1.7.2</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-tx</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-jdbc</artifactId>
		<version>${spring.version}</version>
	</dependency>
	
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-orm</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-context-support</artifactId>
		<version>${spring.version}</version>
	</dependency>
	
	<!-- spring web -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-web</artifactId>
		<version>${spring.version}</version>
	</dependency>
	
	<!-- spring mvc -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-webmvc</artifactId>
		<version>${spring.version}</version>
	</dependency>
	
	<!-- 定时器 -->
<!-- 	<dependency> -->
<!-- 		<groupId>org.quartz-scheduler</groupId> -->
<!-- 		<artifactId>quartz</artifactId> -->
<!-- 		<version>2.1.6</version> -->
<!-- 	</dependency> -->
	
	<!-- hibernate4 -->
	<dependency>
		<groupId>org.hibernate</groupId>
		<artifactId>hibernate-core</artifactId>
		<version>${hibernate.version}</version>
		<exclusions>
			<exclusion>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
			</exclusion>
		</exclusions>
	</dependency>
	<dependency>
		<groupId>org.hibernate</groupId>
		<artifactId>hibernate-ehcache</artifactId>
		<version>${hibernate.version}</version>
	</dependency>
	<dependency>
		<groupId>com.fasterxml.jackson.core</groupId>
		<artifactId>jackson-databind</artifactId>
		<version>${jackson.version}</version>
	</dependency>
  </dependencies>
  
  <build>
    <finalName>tech07MavenIDEWEB</finalName>
    <!-- 默认操作是 install -->
    <defaultGoal>install</defaultGoal>
    <plugins>
    	<!-- 忽略编译项目时的测试运行 -->
    	<plugin>
    		<groupId>org.apache.maven.plugins</groupId>
    		<artifactId>maven-surefire-plugin</artifactId>
    		<configuration>
				<skip>true</skip>
    		</configuration>
    	</plugin>
    	<!-- 定义了编译时的配置信息 -->
    	<plugin>
    		<groupId>org.apache.maven.plugins</groupId>
    		<artifactId>maven-compile-plugin</artifactId>
    		<!-- 2.5.1 或 3.2-->
    		<version> 3.2</version>
    		<configuration>
<!--     		<source>${jdk.version}</source> -->
    			<source>1.6</source>
    			<target>1.6</target>
    			<showWarnings>true</showWarnings>
<!--     			<encoding>${file.encoding}</encoding> -->
    		</configuration>
    	</plugin>
    	<!-- war包 -->
    	<plugin>
    		<groupId>org.apache.maven.plugins</groupId>
    		<artifactId>maven-war-plugin</artifactId>
    		<version>2.5</version>
    		<configuration>
   				<warName>${project.artifactId}</warName>
    		</configuration>
    	</plugin>
    	<!-- 解决maven不编译webcontent问题 -->
<!--     	<plugin> -->
<!--     		<groupId>org.apache.maven.plugins</groupId> -->
<!--     		<artifactId>maven-war-plugin</artifactId> -->
<!--     		<version>2.1.1</version> -->
<!--     		<configuration> -->
<!--     			<webResources> -->
<!--     				<resource> -->
<!--     				this is relative to the pom.xml directory -->
<!--     					<directory>WebContent</directory> -->
<!--     				</resource> -->
<!--     			</webResources> -->
<!--     		</configuration> -->
<!--     	</plugin> -->
    </plugins>
  </build>

</project>

